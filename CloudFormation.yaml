# Import properties for EC2Instance (AWS::EC2::Instance)
# 
#     InstanceId: i-05f1c0d5a530227e3
# 
# Import properties for EC2Instance2 (AWS::EC2::Instance)
# 
#     InstanceId: i-005aaa99dee967d4f
# 
# Import properties for ElasticLoadBalancingV2LoadBalancer (AWS::ElasticLoadBalancingV2::LoadBalancer)
# 
#     LoadBalancerArn: arn:aws:elasticloadbalancing:us-east-1:158317763821:loadbalancer/app/my-ALB/34fc7b9182fbe917
# 
# Import properties for ElasticLoadBalancingV2Listener (AWS::ElasticLoadBalancingV2::Listener)
# 
#     ListenerArn: arn:aws:elasticloadbalancing:us-east-1:158317763821:listener/app/my-ALB/34fc7b9182fbe917/94592a6dd22a3a07
# 
# Import properties for EC2SecurityGroup (AWS::EC2::SecurityGroup)
# 
#     GroupId: sg-03f6418d820602574
# 
AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    EC2Instance:
        DeletionPolicy: "Retain"
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-051f7e7f6c2f40dc1"
            InstanceType: "t2.micro"
            AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
            Tenancy: "default"
            SubnetId: "subnet-025017dec64b73269"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-0db13df637df34e82"
              - !Ref EC2SecurityGroup
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0df02886e131756ec"
                    VolumeType: "gp3"
                    DeleteOnTermination: true
            UserData: "IyEvYmluL2Jhc2gKIyBVc2UgdGhpcyBmb3IgeW91ciB1c2VyIGRhdGEgKHNjcmlwdCBmcm9tIHRvcCB0byBib3R0b20pCiMgaW5zdGFsbCBodHRwZCAoTGludXggMiB2ZXJzaW9uKQp5dW0gdXBkYXRlIC15Cnl1bSBpbnN0YWxsIC15IGh0dHBkCnN5c3RlbWN0bCBzdGFydCBodHRwZApzeXN0ZW1jdGwgZW5hYmxlIGh0dHBkCmVjaG8gIjxoMT5IZWxsbyBXb3JsZCBmcm9tICQoaG9zdG5hbWUgLWYpPC9oMT4iID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1s"
            Tags: 
              - 
                Key: "Name"
                Value: "ALB instance1"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    EC2Instance2:
        DeletionPolicy: "Retain"
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-051f7e7f6c2f40dc1"
            InstanceType: "t2.micro"
            AvailabilityZone: !Sub "${AWS::Region}a"
            Tenancy: "default"
            SubnetId: "subnet-025017dec64b73269"
            EbsOptimized: false
            SecurityGroupIds: 
              - "sg-0db13df637df34e82"
              - !Ref EC2SecurityGroup
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0df02886e131756ec"
                    VolumeType: "gp3"
                    DeleteOnTermination: true
            UserData: "IyEvYmluL2Jhc2gKIyBVc2UgdGhpcyBmb3IgeW91ciB1c2VyIGRhdGEgKHNjcmlwdCBmcm9tIHRvcCB0byBib3R0b20pCiMgaW5zdGFsbCBodHRwZCAoTGludXggMiB2ZXJzaW9uKQp5dW0gdXBkYXRlIC15Cnl1bSBpbnN0YWxsIC15IGh0dHBkCnN5c3RlbWN0bCBzdGFydCBodHRwZApzeXN0ZW1jdGwgZW5hYmxlIGh0dHBkCmVjaG8gIjxoMT5IZWxsbyBXb3JsZCBmcm9tICQoaG9zdG5hbWUgLWYpPC9oMT4iID4gL3Zhci93d3cvaHRtbC9pbmRleC5odG1s"
            Tags: 
              - 
                Key: "Name"
                Value: "ALB instance2"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    ElasticLoadBalancingV2LoadBalancer:
        DeletionPolicy: "Retain"
        Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
        Properties:
            Name: "my-ALB"
            Scheme: "internet-facing"
            Type: "application"
            Subnets: 
              - "subnet-025017dec64b73269"
              - "subnet-0af0bef262acc130a"
              - "subnet-0caaccec40b0f1816"
              - "subnet-0cd03a5ea0aeea287"
              - "subnet-0d7159c127f4305d2"
              - "subnet-0ed23afebe527a418"
            SecurityGroups: 
              - !Ref EC2SecurityGroup
              - "sg-032e562d1887de7b7"
            IpAddressType: "ipv4"
            LoadBalancerAttributes: 
              - 
                Key: "access_logs.s3.enabled"
                Value: "false"
              - 
                Key: "idle_timeout.timeout_seconds"
                Value: "60"
              - 
                Key: "deletion_protection.enabled"
                Value: "false"
              - 
                Key: "routing.http2.enabled"
                Value: "true"
              - 
                Key: "routing.http.drop_invalid_header_fields.enabled"
                Value: "false"
              - 
                Key: "routing.http.xff_client_port.enabled"
                Value: "false"
              - 
                Key: "routing.http.preserve_host_header.enabled"
                Value: "false"
              - 
                Key: "routing.http.xff_header_processing.mode"
                Value: "append"
              - 
                Key: "load_balancing.cross_zone.enabled"
                Value: "true"
              - 
                Key: "routing.http.desync_mitigation_mode"
                Value: "defensive"
              - 
                Key: "waf.fail_open.enabled"
                Value: "false"
              - 
                Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
                Value: "false"

    ElasticLoadBalancingV2Listener:
        DeletionPolicy: "Retain"
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
            LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
            Port: 80
            Protocol: "HTTP"
            DefaultActions: 
              - 
                TargetGroupArn: !Sub "arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:targetgroup/${ElasticLoadBalancingV2LoadBalancer.LoadBalancerName}-demo-tg/9b36286f60d80f74"
                Type: "forward"

    EC2SecurityGroup:
        DeletionPolicy: "Retain"
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Allows HTTP from everywhere"
            GroupName: "ALB-demo-sg"
            VpcId: "vpc-0447828ba84bda6b1"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"

